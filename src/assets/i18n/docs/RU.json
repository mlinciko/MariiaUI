{
  "header": {
    "menu": {
      "demos": "Демо",
      "docs": "Документация",
      "blog": "Блог"
    },
    "dropdownLabel": "Язык"
  },
  "docs": {
    "menu": {
      "overview": "Обзор",
      "gettingStarted": "Начало работы",
      "translation": "Перевод",
      "themes": "Темы",
      "styling": "Стилизация",
      "icons": "Иконки",
      "dataTypes": "Типы данных",
      "uiComponents": "UI Компоненты"
    },
    "gettingStarted": {
      "title": "Начало работы",
      "description": "Этот раздел посвящен начальным шагам, необходимым для начала использования библиотеки в ваших Angular приложениях",
      "creatingNewApp": {
        "title": "Создание нового Angular проекта",
        "description": "Если Angular уже существует, пропустите этот пункт. Создайте новый Angular проект с помощьб команды:"
      },
      "installation": {
        "title": "Установка",
        "description1": "Установите библиотеку, используя команду npm или yarn:",
        "description2": "или"
      },
      "importing": {
        "title": "Импорт",
        "description": "Импортируйте <b>MariiaUiModule</b> в ваш AppModule:"
      },
      "styles": {
        "title": "Стили",
        "description": "Импортируйте файл <b>themes.scss</b> в ваш файл с глобальными стилями:"
      },
      "using": {
        "title": "Использование UI Компонентов",
        "description": "Используйте готовые компоненты в шаблоне:"
      }
    },
    "translation": {
      "title": "Перевод",
      "description": "Данный раздел посвящен возможности добавления в библиотеку переводов текстов ошибок/заголовков и т.п.",
      "setting": {
        "title": "Установка переводов",
        "description1": "Сначала скачайте файл  <a href=\"/assets/i18n/library/example-translation.json\" download>example-translation.json</a> и замените переводы по умолчанию на те, которые вам необходимы. Например:",
        "description2": "Замените на:"
      },
      "params": {
        "title": "Параметры",
        "description1": "Вы можете использовать параметры для переводов. Установите необходимый параметр в ${} Например:",
        "description2": "<b>max</b> будет заменено на значение параметра в этой строке"
      },
      "providers": {
        "title": "Добавление провайдеров",
        "description1": "Добавьте созданный файл с переводами в ваш проект и затем добавить этот код в ваш <b>AppModule</b>:",
        "description2": "Теперь приложение использует ваш файл с переводами для UI Компонентов"
      }
    },
    "themes": {
      "title": "Темы",
      "description": "В этом разделе описываются возможности библиотеки по выбору стилевых тем",
      "import": {
        "title": "Импорт",
        "description": "Импортируйте файл <b>themes.scss</b> в ваш файл с глобальными стилями:"
      },
      "providers": {
        "title": "Добавление провайдеров",
        "description1": "Добавьте провайдер для темы в ваш <b>AppModule</b>",
        "description2": "<b>ThemeConfig</b> имеет следующий вид"
      },
      "custom": {
        "title": "Настраиваемая тема",
        "description": "Вы также можете прописать собственные цвета для UI компонентов. Добавьте этот CSS код в ваш глобальный файл стилей:"
      }
    },
    "styling": {
      "title": "Стилизация",
      "description": "Этот раздел посвящен возможности библиотеки кастомизировать компонент путем задания собственных стилей",
      "defineStyles": {
        "title": "Определение стилей",
        "description": "Напишите желаемые стили и сохраните их в переменную компонента"
      },
      "directive": {
        "title": "Применение директивы",
        "description1": "Примените директиву <b>muiStyles</b> к компоненту, стили которого необходимо изменить. Передайте в директиву ранее определенные стили",
        "description2": "Теперь компонент будет использовать ваши стили. Например:"
      }
    },
    "overview": {
      "title": "Обзор",
      "description": "Добро пожаловать в официальную документацию библиотеки компонентов пользовательского интерфейса Angular - MariiaUI! Эта библиотека предоставляет надежный, настраиваемый набор компонентов пользовательского интерфейса, предназначенных для облегчения быстрой разработки современных, адаптивных и доступных веб-приложений с использованием Angular",
      "keyFeatures": {
        "title": "Ключевые особенности",
        "description": "<p><b>Готовые компоненты:</b> Полный набор компонентов, включая кнопки, диалоговые окна, вкладки, элементы формы и многое другое для улучшения UI вашего приложения.</p><p><b>Высокая настраиваемость:</b> Стиль и поведение компонентов легко настраиваются, чтобы соответствовать потребностям вашего приложения в брендинге и функциональности.</p><p><b>Готовность к использованию:</b> Все компоненты готовы к использованию \"из коробки\", они не требуют дополнительной настройки, если только вы сами не захотите поменять их поведение.</p><p><b>Адаптивный дизайн:</b> Библиотека разработана для работы на различных устройствах и экранах разного размера с использованием принципов адаптивного дизайна.</p>"
      },
      "feedback": {
        "title": "Обратная связь и поддержка",
        "description": "<p>Мы ценим вашу обратную связь! Если у вас есть какие-либо вопросы, предложения или проблемы, связанные с нашей библиотекой UI-компонентов для Angular, не стесняйтесь обращаться к нам. Проверьте issues на <a href=\"https://github.com/mlinciko/MariiaUI/issues\">GitHub</a></p><p>Спасибо, что выбрали библиотеку UI-компонентов - MariiaUI! Надеемся, она окажется полезной, и вы получите удовольствие, создавая потрясающие приложения на Angular.</p>"
      },
      "contribution": {
        "title": "Участие",
        "description": "<p>Мы всегда рады вашему участию в нашей библиотеке! Независимо от того, улучшаете ли вы документацию, добавляете новые функции или исправляете ошибки, мы ценим все вклады, которые делают нашу библиотеку лучше.</p><p>Мы надеемся, что этот обзор поможет вам начать работу с нашей библиотекой. Погрузитесь глубже в конкретные компоненты и продвинутое использование в других разделах этой документации. Наслаждайтесь созданием вашего следующего проекта с помощью наших инструментов!</p>"
      }
    },
    "icons": {
      "title": "Иконки",
      "description": "Иконки — это визуальные элементы, которые можно использовать для дополнения пользовательского интерфейса",
      "inputs": {
        "color": "Свойство позволяет установить цвет иконки",
        "width": "Свойство позволяет установить ширину иконки",
        "height": "Свойство позволяет установить высоту иконки"
      }
    },
    "docPage": {
      "viewDemo": "Посмотреть демо",
      "properties": "Свойства",
      "type": "Тип",
      "returnType": "Возвращаемый тип",
      "defaultValue": "Значение по умолчанию",
      "description": "Описание",
      "noInputs": "Компонент не имеет свойств типа input",
      "noOutputs": "Компонент не имеет свойств типа output"
    },
    "dataTypes": {
      "title": "Типы данных",
      "description": "Этот раздел описывает типы данных, которые используются в библиотеке"
    },
    "accordion": {
      "description": "UI-компонент, позволяющий просматривать содержимое подразделов или категорий в интерфейсе с возможностью развертывания и сворачивания каждого раздела по мере необходимости",
      "label": "Свойство позволяет установить заголовок для всего компонента",
      "onItemVisibilityChange": "Свойство генерирует событие, когда элемент компонента изменяет свою видимость. Возвращает метку элемента, видимость которого изменилась"
    },
    "accordionItem": {
      "description": "UI-компонент, являющийся частью компонента Аккордеон. Представляет один элемент родительского компонента",
      "label": "Свойство позволяет установить метку для одного элемента компонента Аккордеон",
      "isExpanded": "Свойство позволяет указать, развернут ли элемент по умолчанию",
      "onChange": "Свойство генерирует событие, когда кликают по заголовку элемента"
    },
    "barChart": {
      "description": "UI-компонент, позволяющий отображать данные в виде столбцов, где каждый столбец представляет разную категорию или переменную, а высота столбца пропорциональна значению этой категории",
      "label": "Свойство позволяет установить метку для графика",
      "barColor": "Свойство позволяет установить цвет столбцов для графика",
      "series": "Свойство позволяет установить данные для графика",
      "showGrid": "Свойство позволяет включить сетку для графика",
      "width": "Свойство позволяет установить ширину графика",
      "height": "Свойство позволяет установить высоту графика",
      "onBarMouseover": "Свойство генерирует новое значение, когда мышь наводится на колонку графика",
      "onBarMouseout": "Свойство генерирует новое значение, когда курсор мыши уходит с колонки графика"
    },
    "button": {
      "description": "UI-компонент, позволяющий подтвердить действие",
      "label": "Свойство позволяет установить название для кнопки",
      "type": "Свойство позволяет установить тип для кнопки из перечисления",
      "disabled": "Свойство позволяет установить состояние отключено для кнопки",
      "onClick": "Свойство генерирует событие, когда кнопка нажата"
    },
    "checkbox": {
      "description": "UI-компонент, позволяющий выбрать один или несколько вариантов из предложенного списка",
      "label": "Свойство позволяет установить название для компонента флажок",
      "disabled": "Свойство позволяет установить состояние отключено для компонента флажок",
      "readOnly": "Свойство позволяет установить состояние только для чтения для компонента флажок",
      "visible": "Свойство позволяет установить состояние видимости для компонента флажок",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для компонента флажок",
      "onChange": "Свойство генерирует событие, когда компонент флажок получает новое значение"
    },
    "datePicker": {
      "description": "UI-компоненты, позволяющие пользователю выбирать дату из календаря. Компонент имеет навигацию по календарю",
      "label": "Свойство позволяет установить название для компонента выбора даты",
      "disabled": "Свойство позволяет установить состояние отключено для компонента выбора даты",
      "placeholder": "Свойство позволяет установить заполнитель для компонента выбора даты",
      "readOnly": "Свойство позволяет установить состояние только для чтения для компонента выбора даты",
      "showClearButton": "Свойство позволяет установить состояние показать кнопку очистки для компонента выбора даты",
      "visible": "Свойство позволяет установить состояние видимости для компонента выбора даты",
      "dateMask": "Свойство позволяет установить маску даты для компонента выбора даты",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для компонента выбора даты",
      "onChange": "Свойство генерирует событие, когда компонент выбора даты получает новое значение",
      "onClick": "Свойство генерирует событие, когда компонент выбора даты нажат",
      "onCalendarVisibilityChanged": "Свойство генерирует событие, когда состояние видимости календаря компонента выбора даты изменяется"
    },
    "dropdown": {
      "description": "UI-компонент позволяет пользователю выбирать один вариант из предопределенного списка, который появляется при нажатии на поле",
      "options": "Свойство позволяет установить опции для компонента выпадающего списка",
      "label": "Свойство позволяет установить название для компонента выпадающего списка",
      "disabled": "Свойство позволяет установить состояние отключено для компонента выпадающего списка",
      "placeholder": "Свойство позволяет установить заполнитель для компонента выпадающего списка",
      "readOnly": "Свойство позволяет установить состояние только для чтения для компонента выпадающего списка",
      "showClearButton": "Свойство позволяет установить состояние показать кнопку очистки для компонента выпадающего списка",
      "visible": "Свойство позволяет установить состояние видимости для компонента выпадающего списка",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для компонента выпадающего списка",
      "onSelectionChange": "Свойство генерирует событие, когда компонент выпадающего списка получает новое значение",
      "onOptionsVisibilityChange": "Свойство генерирует событие, когда состояние видимости опций компонента выпадающего списка изменяется"
    },
    "filePicker": {
      "description": "UI-компонент позволяет пользователю выбирать файлы с его локального устройства",
      "label": "Свойство позволяет установить название для компонента выбора файла",
      "buttonLabel": "Свойство позволяет установить название для кнопки компонента выбора файла",
      "allowedTypes": "Свойство позволяет установить разрешенные типы файлов для компонента выбора файла",
      "showClearButton": "Свойство позволяет включить кнопку очистки для компонента выбора файла",
      "disabled": "Свойство позволяет установить состояние отключено для компонента выбора файла",
      "placeholder": "Свойство позволяет установить заполнитель для компонента выбора файла",
      "readOnly": "Свойство позволяет установить состояние только для чтения для компонента выбора файла",
      "visible": "Свойство позволяет установить состояние видимости для компонента выбора файла",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для компонента выбора файла",
      "onFileSelected": "Свойство генерирует событие, когда компонент выбора файла получает новое значение",
      "onFileDeleted": "Свойство генерирует событие, когда файл удаляется из компонента выбора файла"
    },
    "input": {
      "description": "UI-компонент позволяет пользователю вводить текст с помощью стандартных источников ввода",
      "label": "Свойство позволяет установить название для компонента ввода",
      "disabled": "Свойство позволяет установить состояние отключено для компонента ввода",
      "placeholder": "Свойство позволяет установить заполнитель для компонента ввода",
      "readOnly": "Свойство позволяет установить состояние только для чтения для компонента ввода",
      "showClearButton": "Свойство позволяет установить состояние показать кнопку очистки для компонента ввода",
      "visible": "Свойство позволяет установить состояние видимости для компонента ввода",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для компонента ввода",
      "onInput": "Свойство генерирует событие, когда компонент ввода получает новый символ",
      "onChange": "Свойство генерирует событие, когда компонент ввода получает новое значение",
      "onFocus": "Свойство генерирует событие, когда компонент ввода получает фокус",
      "onBlur": "Свойство генерирует событие, когда компонент ввода теряет фокус",
      "onKeydown": "Свойство генерирует событие, когда какая-либо клавиша нажата в компоненте ввода",
      "onKeyup": "Свойство генерирует событие, когда какая-либо клавиша отпущена в компоненте ввода",
      "onKeypress": "Свойство генерирует событие, когда какая-либо клавиша нажата в компоненте ввода",
      "onMousedown": "Свойство генерирует событие, когда кнопка мыши нажата в компоненте ввода",
      "onMouseup": "Свойство генерирует событие, когда кнопка мыши отпущена в компоненте ввода",
      "onClick": "Свойство генерирует событие, когда компонент ввода нажат"
    },
    "lineChart": {
      "description": "UI-компонент представляет собой графическое отображение данных в виде линии, соединяющей точки данных на графике. Каждая точка данных представляет значение переменной в определенной системе координат",
      "label": "Свойство позволяет установить метку для графика",
      "colors": "Свойство позволяет установить цвета линий графика",
      "series": "Свойство позволяет установить данные для графика",
      "showGrid": "Свойство позволяет включить сетку для графика",
      "width": "Свойство позволяет установить ширину графика",
      "height": "Свойство позволяет установить высоту графика",
      "onPointMouseover": "Свойство генерирует новое значение, когда мышь наводится на точку графика",
      "onPointMouseout": "Свойство генерирует новое значение, когда курсор мыши уходит с точки графика"
    },
    "list": {
      "description": "UI-компонент представляет элемент, используемый для отображения упорядоченного набора элементов в виде вертикального списка. Компонент может быть нумерованным или ненумерованным",
      "label": "Свойство позволяет установить метку для списка",
      "items": "Свойство позволяет установить данные для списка",
      "isNumbered": "Свойство позволяет включить нумерацию списка",
      "accessor": "Свойство позволяет установить функцию доступа для данных списка"
    },
    "lookup": {
      "description": "UI-компонент позволяет пользователю искать и выбирать конкретные элементы из предопределенного списка",
      "options": "Свойство позволяет установить опции для компонента поиска",
      "label": "Свойство позволяет установить метку для компонента поиска",
      "disabled": "Свойство позволяет установить состояние отключено для компонента поиска",
      "placeholder": "Свойство позволяет установить заполнитель для компонента поиска",
      "readOnly": "Свойство позволяет установить состояние только для чтения для компонента поиска",
      "showClearButton": "Свойство позволяет установить состояние показать кнопку очистки для компонента поиска",
      "visible": "Свойство позволяет установить состояние видимости для компонента поиска",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для компонента поиска",
      "onSelectionChange": "Свойство генерирует событие, когда компонент поиска получает новое значение",
      "onSearchChange": "Свойство генерирует событие, когда компонент поиска получает новое значение в поле поиска",
      "onOptionsVisibilityChange": "Свойство генерирует событие, когда состояние видимости опций компонента поиска изменяется"
    },
    "notification": {
      "description": "UI-компонент информирует пользователя о различных действиях и событиях",
      "message": "Свойство позволяет установить сообщение для компонента уведомления",
      "duration": "Свойство позволяет установить время продолжительности в миллисекундах для компонента уведомления",
      "type": "Свойство позволяет установить тип для компонента уведомления"
    },
    "numberbox": {
      "description": "UI-компонент позволяет вводить числа с помощью стандартных источников ввода",
      "label": "Свойство позволяет установить название для компонента numberbox",
      "disabled": "Свойство позволяет установить состояние отключено для компонента numberbox",
      "placeholder": "Свойство позволяет установить заполнитель для компонента numberbox",
      "readOnly": "Свойство позволяет установить состояние только для чтения для компонента numberbox",
      "showClearButton": "Свойство позволяет установить состояние показать кнопку очистки для компонента numberbox",
      "visible": "Свойство позволяет установить состояние видимости для компонента numberbox",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для компонента numberbox",
      "onInput": "Свойство генерирует событие, когда компонент numberbox получает новый ввод",
      "onChange": "Свойство генерирует событие, когда значение компонента numberbox изменяется",
      "onFocus": "Свойство генерирует событие, когда компонент numberbox получает фокус",
      "onBlur": "Свойство генерирует событие, когда компонент numberbox теряет фокус",
      "onKeydown": "Свойство генерирует событие, когда какая-либо клавиша нажата в компоненте numberbox",
      "onKeyup": "Свойство генерирует событие, когда какая-либо клавиша отпущена в компоненте numberbox",
      "onKeypress": "Свойство генерирует событие, когда клавиша нажата в компоненте numberbox",
      "onMousedown": "Свойство генерирует событие, когда кнопка мыши нажата в компоненте numberbox",
      "onMouseup": "Свойство генерурует событие, когда кнопка мыши отпущена в компоненте numberbox",
      "onClick": "Свойство генерирует событие, когда компонент numberbox нажат"
    },
    "pieChart": {
      "description": "UI-компонент представляет собой графическое отображение данных в виде круговой диаграммы, где каждая категория данных представлена сектором круга",
      "label": "Свойство позволяет установить метку для диаграммы",
      "colors": "Свойство позволяет установить цвета для секторов диаграммы",
      "series": "Свойство позволяет установить данные для диаграммы",
      "width": "Свойство позволяет установить ширину диаграммы",
      "height": "Свойство позволяет установить высоту диаграммы",
      "onSectorMouseover": "Свойство генерирует событие, когда мышь наводится на сектор диаграммы",
      "onSectorMouseout": "Свойство генерирует событие, когда курсор мыши уходит с сектора диаграммы"
    },
    "popup": {
      "description": "UI-компонент представляет собой небольшое всплывающее окно, которое появляется поверх основного содержимого интерфейса. Компонент может иметь кнопки подтверждения/отмены",
      "title": "Свойство позволяет установить заголовок для всплывающего окна",
      "buttons": "Свойство позволяет установить кнопки для всплывающего компонента",
      "showCloseBtn": "Свойство позволяет включить кнопку закрытия для всплывающего компонента",
      "visible": "Свойство позволяет включить состояние видимости для всплывающего компонента",
      "width": "Свойство позволяет установить ширину в пикселях для всплывающего компонента",
      "height": "Свойство позволяет установить высоту в пикселях для всплывающего компонента",
      "top": "Свойство позволяет установить верхнюю границу в процентах для всплывающего компонента",
      "left": "Свойство позволяет установить левую границу в процентах для всплывающего компонента",
      "onPopupClose": "Свойство генерирует событие, когда кнопка закрытия всплывающего компонента нажата",
      "visibleChange": "Свойство генерирует событие, когда входное значение видимости компонента изменяется"
    },
    "radioButton": {
      "description": "UI-компонент является частью компонента группы радиокнопок",
      "label": "Свойство позволяет установить метку для компонента радиокнопки",
      "isChecked": "Свойство позволяет установить состояние активности для радиокнопки",
      "onChange": "Свойство генерирует событие, когда состояние активности радиокнопки изменяется"
    },
    "radioGroup": {
      "description": "UI-компонент позволяет выбрать один из предопределенных вариантов",
      "label": "Свойство позволяет установить метку для компонента группы радиокнопок",
      "disabled": "Свойство позволяет установить состояние отключено для группы радиокнопок",
      "readOnly": "Свойство позволяет установить состояние только для чтения для группы радиокнопок",
      "visible": "Свойство позволяет установить состояние видимости для группы радиокнопок",
      "onChange": "Свойство генерирует новое значение, когда изменяется выбранный элемент группы радиокнопок"
    },
    "scrollLayout": {
      "description": "UI-компонент представляет элемент, который предоставляет возможность прокрутки содержимого, которое не помещается полностью на экране",
      "width": "Свойство позволяет установить ширину для компонента прокрутки",
      "height": "Свойство позволяет установить высоту для компонента прокрутки",
      "direction": "Свойство позволяет установить направление прокрутки для компонента прокрутки"
    },
    "slideToggle": {
      "description": "UI-компонент, который позволяет выбирать между двумя состояниями",
      "label": "Свойство позволяет установить название для компонента переключателя",
      "disabled": "Свойство позволяет установить состояние отключено для переключателя",
      "readOnly": "Свойство позволяет установить состояние только для чтения для переключателя",
      "visible": "Свойство позволяет установить состояние видимости для переключателя",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для переключателя",
      "onChange": "Свойство генерирует событие, когда значение переключателя изменяется"
    },
    "slider": {
      "description": "UI-компонент представляет элемент, позволяющий пользователю просматривать серию изображений, переключая их вперед или назад",
      "showDots": "Свойство позволяет установить навигационные точки для компонента слайдера",
      "width": "Свойство позволяет установить ширину для компонента слайдера",
      "slideWidth": "Свойство позволяет установить ширину слайда для компонента слайдера",
      "gap": "Свойство позволяет установить ширину зазора между слайдами для компонента слайдера",
      "onSlideActiveChange": "Свойство генерирует событие, когда изменяется активный слайд. Возвращает индекс активного слайда"
    },
    "sliderItem": {
      "description": "UI-компонент является частью компонента слайдера",
      "isActive": "Свойство позволяет установить активное состояние для элемента слайдера"
    },
    "spinner": {
      "description": "UI-компонент позволяет информировать пользователя о загрузке данных/страницы и т.д.",
      "visible": "Свойство позволяет установить состояние видимости для компонента индикатора загрузки",
      "color": "Свойство позволяет установить цвет для компонента индикатора загрузки",
      "width": "Свойство позволяет установить ширину для компонента индикатора загрузки",
      "height": "Свойство позволяет установить высоту для компонента индикатора загрузки",
      "mode": "Свойство позволяет установить режим для компонента индикатора загрузки"
    },
    "tab": {
      "description": "UI-компонент является частью компонента вкладок",
      "label": "Свойство позволяет установить метку для компонента вкладки",
      "isActive": "Свойство позволяет установить активное состояние для вкладки",
      "id": "Свойство позволяет установить идентификатор для вкладки"
    },
    "table": {
      "description": "UI-компонент представляет элемент, используемый для отображения данных в виде таблицы с строками и столбцами. Может иметь фильтрацию, сортировку данных и пагинацию (переключение между страницами таблицы)",
      "data": "Свойство позволяет установить данные для компонента таблицы",
      "columns": "Свойство позволяет установить столбцы для компонента таблицы",
      "addingEnabled": "Свойство позволяет включить добавление для компонента таблицы",
      "editingEnabled": "Свойство позволяет включить редактирование для компонента таблицы",
      "deletingEnabled": "Свойство позволяет включить удаление для компонента таблицы",
      "sortingEnabled": "Свойство позволяет включить сортировку для компонента таблицы",
      "filteringEnabled": "Свойство позволяет включить фильтрацию для компонента таблицы",
      "paginationEnabled": "Свойство позволяет включить пагинацию для компонента таблицы",
      "pageSizes": "Свойство позволяет установить размеры страниц для пагинации компонента таблицы",
      "width": "Свойство позволяет установить ширину для компонента таблицы",
      "height": "Свойство позволяет установить высоту для компонента таблицы",
      "onRowAdded": "Свойство генерирует событие, когда новая строка добавлена в компонент таблицы",
      "onRowSaved": "Свойство генерирует событие, когда строка сохранена в компоненте таблицы",
      "onRowEdited": "Свойство генерирует событие, когда строка отредактирована в компоненте таблицы",
      "onRowDeleted": "Свойство генерирует событие, когда строка удалена из компонента таблицы",
      "onFilterChange": "Свойство генерирует событие, когда изменяется фильтрация в компоненте таблицы",
      "onSortingChange": "Свойство генерирует событие, когда изменяется сортировка в компоненте таблицы",
      "onPaginationChange": "Свойство генерирует событие, когда изменяется пагинация в компоненте таблицы"
    },
    "tabs": {
      "description": "UI-компонент представляет элемент, организующий содержимое по нескольким вкладкам. Каждая вкладка содержит отдельное содержимое, и пользователь может переключаться между ними, выбирая желаемую вкладку",
      "onSelectionChange": "Свойство генерирует событие, когда активная вкладка изменяется в компоненте вкладок"
    },
    "textarea": {
      "description": "UI-компонент представляет текстовое поле для ввода данных в несколько строк. Позволяет пользователю вводить текст с помощью стандартных источников ввода. Имеет счетчик введенных символов",
      "label": "Свойство позволяет установить название для компонента текстового поля",
      "disabled": "Свойство позволяет установить состояние отключено для текстового поля",
      "placeholder": "Свойство позволяет установить заполнитель для текстового поля",
      "readOnly": "Свойство позволяет установить состояние только для чтения для текстового поля",
      "showClearButton": "Свойство позволяет установить состояние показать кнопку очистки для текстового поля",
      "visible": "Свойство позволяет установить состояние видимости для текстового поля",
      "height": "Свойство позволяет установить высоту для текстового поля",
      "maxLength": "Свойство позволяет установить максимальную длину текста для текстового поля",
      "showCounter": "Свойство позволяет включить счетчик символов для текстового поля",
      "formControl": "Свойство позволяет установить нативный контроль формы Angular для текстового поля",
      "onInput": "Свойство генерирует событие, когда текстовое поле получает новый ввод",
      "onChange": "Свойство генерирует событие, когда значение текстового поля изменяется",
      "onFocus": "Свойство генерирует событие, когда текстовое поле получает фокус",
      "onBlur": "Свойство генерирует событие, когда текстовое поле теряет фокус",
      "onKeydown": "Свойство генерирует событие, когда клавиша нажата в текстовом поле",
      "onKeyup": "Свойство генерирует событие, когда клавиша отпущена в текстовом поле",
      "onKeypress": "Свойство генерирует событие, когда клавиша нажата в текстовом поле",
      "onMousedown": "Свойство генерирует событие, когда кнопка мыши нажата на текстовом поле",
      "onMouseup": "Свойство генерирует событие, когда кнопка мыши отпущена на текстовом поле",
      "onClick": "Свойство генерирует событие, когда текстовое поле нажато"
    },
    "tooltip": {
      "description": "UI-компонент позволяет показывать пользователю дополнительную информацию об элементе при наведении на него",
      "tooltipText": "Свойство позволяет установить текст всплывающей подсказки для компонента подсказки"
    }
  }
}